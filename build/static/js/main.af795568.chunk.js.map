{"version":3,"sources":["redux/auth/auth-selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation.js","components/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar.js","components/ContainerGeneralForPage/ContainerGeneralForPage.js","App.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","components/Navigation.module.css","components/AppBar.module.css","components/AuthNav.module.css","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js","components/ContainerGeneralForPage/ContainerGeneralForPage.module.css"],"names":["state","auth","isUserInLogin","user","name","getIsAuthenticated","authSelectors","connect","isAuthenticated","Component","component","redirectTo","routeProps","render","props","to","restricted","className","s","mainNavBox","exact","activeStyle","color","mainNav","AuthNav","secondNav","getUserName","logOut","authOperations","dispatch","makeLogOut","welcomeBox","welcomeText","welcomeName","btnLogout","type","onClick","appBarBox","secondMenuBox","ContainerGeneralForPage","children","containerGeneral","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","getCurrentUser","App","this","getUser","fallback","height","width","path","registerSuccess","authActions","registerError","loginSuccess","loginError","logoutSuccess","logoutError","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","createReducer","_","payload","__","token","setError","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactReducer","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","registerRequest","logoutRequest","loginRequest","getCurrentUserRequest","axios","defaults","baseURL","headers","common","Authorization","register","credentials","post","then","response","data","catch","err","message","login","getState","persistedToken","get","contactActions","items","filter","id"],"mappings":"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","file":"static/js/main.af795568.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isUserInLogin;\nconst getUserName = state => state.auth.user.name;\n\n\nexport default {\n    getIsAuthenticated,\n    getUserName,\n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst {getIsAuthenticated} = authSelectors;\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n  }) => (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n      }\n    />\n  );\n  \n  const mapStateToProps = state => ({\n    isAuthenticated: getIsAuthenticated(state),\n  });\n\n\n  export default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst {getIsAuthenticated} = authSelectors;\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted \n      ? (<Redirect to={redirectTo} />) \n      : (<Component {...props} />)\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\n\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\nimport { connect } from 'react-redux';\n\nimport s from './Navigation.module.css';\n\nconst {getIsAuthenticated} = authSelectors;\n\nconst Navigation = ({isAuthenticated}) => (\n    <nav className={s.mainNavBox}>\n        <NavLink \n            to=\"/\"\n            exact\n            activeStyle={{color:\"#656566\"}} \n            className={s.mainNav}\n        >Home\n        </NavLink>\n\n        {isAuthenticated && \n            <NavLink \n                to=\"/contacts\"\n                activeStyle={{color:\"#656566\"}} \n                className={s.mainNav}\n            >Contacts\n            </NavLink>\n        }\n    </nav>\n);\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './AuthNav.module.css';\n\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      activeStyle={{color:\"#656566\"}}\n      className={s.secondNav}\n      to=\"/register\"\n      exact\n    >\n      Registration\n    </NavLink>\n    <NavLink\n      activeStyle={{color:\"#656566\"}}\n      className={s.secondNav}\n      to=\"/login\"\n      exact\n    >\n      Authorization\n    </NavLink>\n  </div>\n);\n\n\nexport default AuthNav;","import React from 'react';\nimport {connect} from 'react-redux';\nimport s from './UserMenu.module.css';\n\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\n\nconst {getUserName} = authSelectors;\nconst {logOut} = authOperations;\n\nconst UserMenu = ({name, makeLogOut}) => (\n  <>\n    <div className={s.welcomeBox}>\n      <div className={s.welcomeText}>Welcome,</div>\n      <div className={s.welcomeName}>{name}</div>\n    </div>\n    <button \n      className={s.btnLogout}\n      type=\"button\" \n      onClick={makeLogOut}\n    >\n      Logout\n    </button>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  name: getUserName(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  makeLogOut: () => dispatch(logOut()),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './AppBar.module.css';\n\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav';\nimport UserMenu from './UserMenu';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst {getIsAuthenticated} = authSelectors;\n\n\nconst AppBar = ({isAuthenticated}) => (\n    <div className={s.appBarBox}>\n        <header>\n            <Navigation />\n            <div className={s.secondMenuBox}>\n                {isAuthenticated ? <UserMenu /> : <AuthNav />}\n            </div>\n        </header>\n    </div>\n\n);\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: getIsAuthenticated(state),\n});\n\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\n\nimport s from './ContainerGeneralForPage.module.css';\n\nconst ContainerGeneralForPage = ({ children }) => {\n    return (\n        <div className={s.containerGeneral}>\n            {children}\n        </div>\n    );\n};\n\nexport default ContainerGeneralForPage;","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport AppBar from './components/AppBar';\r\n\r\nimport ContainerGeneralForPage from './components/ContainerGeneralForPage';\r\n\r\n\r\nconst HomePage = lazy(() => \r\n    import('./pages/HomePage' /*webpackChunkName: \"home-page\" */)\r\n);\r\n\r\nconst ContactsPage = lazy(() => \r\n    import('./pages/ContactsPage' /*webpackChunkName: \"contacts-page\" */)\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n    import('./pages/RegisterPage' /*webpackChunkName: \"register-page\" */)\r\n);\r\n\r\nconst LoginPage = lazy( () =>\r\n    import('./pages/LoginPage' /*webpackChunkName: \"login-page\" */)\r\n\r\n);\r\n\r\nconst {getCurrentUser} = authOperations;\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ContainerGeneralForPage>\r\n                <AppBar />\r\n                <Suspense \r\n                    fallback={\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#666464\"\r\n                            height={60}\r\n                            width={60}\r\n                        />\r\n                    }\r\n                >\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact \r\n                            path=\"/\" \r\n                            component={HomePage} \r\n                        />\r\n                        <PublicRoute \r\n                            path=\"/register\" \r\n                            component={RegisterPage}\r\n                            restricted\r\n                            redirectTo=\"/contacts\"\r\n                        />\r\n                        <PublicRoute \r\n                            path=\"/login\" \r\n                            component={LoginPage}\r\n                            restricted\r\n                            redirectTo=\"/contacts\"\r\n                        />\r\n                        <PrivateRoute \r\n                            path=\"/contacts\" \r\n                            component={ContactsPage}\r\n                            redirectTo=\"/login\"\r\n                        />\r\n                    </Switch>\r\n                </Suspense>\r\n            </ContainerGeneralForPage>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUser: () => dispatch(getCurrentUser()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst {\n    registerSuccess, \n    registerError,\n    loginSuccess,\n    loginError,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    } = authActions;\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [registerSuccess]: (_, {payload}) => payload.user,\n    [loginSuccess]: (_, {payload}) => payload.user,\n    [logoutSuccess]: (_, __) => initialUserState,\n    [getCurrentUserSuccess]: (_, {payload}) => payload,\n});\n\nconst token = createReducer(null, {\n    [registerSuccess]: (_, {payload}) => payload.token,\n    [loginSuccess]: (_, {payload}) => payload.token,\n    [logoutSuccess]: (_, __) => null,\n});\n\nconst setError = (_, {payload}) => payload;\n\nconst error = createReducer(null, {\n    [registerError]: setError,\n    [loginError]: setError,\n    [logoutError]: setError,\n    [getCurrentUserError]: setError,\n});\n\n\nconst isUserInLogin = createReducer(false, {\n    [registerSuccess]: () => true,\n    [loginSuccess]: () => true,\n    [getCurrentUserSuccess]: () => true,\n    [registerError]: () => false,\n    [loginError]: () => false,\n    [getCurrentUserError]: () => false,\n    [logoutSuccess]: () => false,\n});\n\n\nexport default combineReducers({\n    user,\n    isUserInLogin,\n    token,\n    error,\n});","import { \r\n    configureStore,\r\n    getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n\r\n\r\nimport { \r\n    persistStore, \r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// import logger from 'redux-logger';\r\nimport contactReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore ({\r\n        reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactReducer,\r\n    },\r\n    middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n\r\nexport default {store, persistor};\r\n\r\n\r\n\r\n// ---------------------------\r\n\r\n// const persistConfig = {\r\n//     key: 'YUHHHUUUUU!!!',\r\n//     storage,\r\n//   }\r\n\r\n\r\n// const middleware = [...getDefaultMiddleware({\r\n//   serializableCheck: {\r\n//        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//    }),\r\n// logger\r\n//];\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n// })\r\n\r\n// const perRed = persistReducer(persistConfig, rootReducer)\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         auth: authReducer,\r\n//         contacts: perRed,\r\n//     },\r\n//     middleware,\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n\r\n// export default {store, persistor};\r\n\r\n\r\n\r\n\r\n// ----------------------- ORIGIN ----------------------\r\n\r\n// const middleware = [...getDefaultMiddleware(),logger];\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         auth: authReducer,\r\n//         contacts: contactReducer,\r\n//     },\r\n//     middleware,\r\n// });\r\n\r\n\r\n// export default store;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store.store}>\r\n            <PersistGate loading={null} persistor={store.persistor}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactContactsError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/Filter');\r\n\r\n\r\nexport default { \r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactContactsError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter \r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcomeBox\":\"UserMenu_welcomeBox__1YRi7\",\"welcomeText\":\"UserMenu_welcomeText__nQRP1\",\"welcomeName\":\"UserMenu_welcomeName__2HYGg\",\"btnLogout\":\"UserMenu_btnLogout__dfKng\"};","import axios from 'axios';\nimport authActions from './auth-actions';\n\nconst {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n} = authActions;\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n    set(token) {\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n      axios.defaults.headers.common.Authorization = '';\n    },\n  };\n\n\n  const register = credentials => dispatch => {\n    dispatch(registerRequest());\n\n    axios\n    .post('/users/signup', credentials)\n    .then(response => dispatch (registerSuccess(response.data), token.set(response.data.token)))\n    .catch(err => dispatch(registerError(err.message)));\n  };\n\n\n  const login = credentials => dispatch => {\n    dispatch(loginRequest());\n\n    axios\n    .post('/users/login', credentials)\n    .then(response => dispatch(loginSuccess(response.data), token.set(response.data.token)))\n    .catch(err => dispatch(loginError(err.message)));\n  };\n\n  const logOut = () => dispatch => {\n    dispatch(logoutRequest());\n\n    axios\n      .post('/users/logout')\n      .then(() => dispatch(logoutSuccess()), token.unset())\n      .catch(err => dispatch(logoutError(err.message)));\n  };\n\n\n  const getCurrentUser = () => (dispatch, getState) => {\n    const {auth: {token: persistedToken}} = getState();\n\n    if(!persistedToken) {\n      return;\n    }\n\n    token.set(persistedToken);\n\n    dispatch(getCurrentUserRequest());\n    axios\n    .get('/users/current')\n    .then(response => dispatch(getCurrentUserSuccess(response.data)))\n    .catch(err => dispatch(getCurrentUserError(err.message)));\n  };\n\n\n  export default {\n    register,\n    login,\n    logOut,\n    getCurrentUser\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNav\":\"Navigation_mainNav__DPxWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBarBox\":\"AppBar_appBarBox__3UIem\",\"secondMenuBox\":\"AppBar_secondMenuBox__33W4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondNav\":\"AuthNav_secondNav__24xzf\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactContactsError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n} = contactActions;\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_,  { payload }) => payload,\r\n\r\n    [addContactSuccess]: (state, { payload }) => [\r\n        ...state,\r\n        payload,\r\n    ],\r\n\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactContactsError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactsError]: (_, {payload}) => payload,\r\n    [addContactContactsError]: (_, {payload}) => payload,\r\n    [deleteContactError]:  (_, {payload}) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error, \r\n});","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerGeneral\":\"ContainerGeneralForPage_containerGeneral__1ni6F\"};"],"sourceRoot":""}